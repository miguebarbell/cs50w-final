from django.shortcuts import renderfrom .passwgen import generatefrom django.contrib.auth import authenticate, login, logoutfrom django.shortcuts import HttpResponse, HttpResponseRedirect, renderfrom django.urls import reversefrom .models import User, Passwordfrom django.db import IntegrityErrorfrom django.contrib.auth.decorators import login_requiredfrom django.http import HttpResponseRedirect, JsonResponse# Create your views here.def index(request):    # Authenticated users view their inbox    if request.user.is_authenticated:        return render(request, "index.html", {'user': request.user})    # Everyone else is prompted to sign in    else:        return HttpResponseRedirect(reverse("login"))def login_view(request):    if request.method == "POST":        # Attempt to sign user in        username = request.POST["username"]        password = request.POST["password"]        user = authenticate(request, username=username, password=password)        # Check if authentication successful        if user is not None:            login(request, user)            return HttpResponseRedirect(reverse("index"))        else:            return render(request, "login.html", {                "message": "Invalid username and/or password."            })    else:        return render(request, "login.html")def logout_view(request):    logout(request)    return HttpResponseRedirect(reverse("index"))def register(request):    if request.method == "POST":        username = request.POST["username"]        # Ensure password matches confirmation        password = request.POST["password"]        confirmation = request.POST["confirmation"]        if password != confirmation:            return render(request, "register.html", {                "message": "Passwords must match."            })        # Attempt to create new user        try:            user = User.objects.create_user(username, password)            user.save()        except IntegrityError as e:            print(e)            return render(request, "register.html", {                "message": "Username already taken."            })        login(request, user)        return HttpResponseRedirect(reverse("index"))    else:        return render(request, "register.html")@login_requireddef home(request):    """    This is the main page with all the passwords stored.    return json    """    items = Password.objects.all()    user = User.objects.get(username=request.user)    response = {}    for item in items:        if user == item.user:            response[item.id].append({'username': item.username, 'password': item.passw, 'note': item.notes, 'date': item.date})    return JsonResponse({'response': response, 'status': 201})